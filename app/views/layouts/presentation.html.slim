doctype html
html lang="en"

  head
    meta charset='utf-8'
    title Codekwondo | Skill: #{@skill.title}
    meta content='yes' name='apple-mobile-web-app-capable'
    meta content='black-translucent' name='apple-mobile-web-app-status-bar-style'
    meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no' name='viewport'
    link href='/revealjs/css/reveal.css' rel='stylesheet'
    link#theme href='/revealjs/css/theme/solarized.css' rel='stylesheet'

    / For syntax highlighting
    link href='/revealjs/lib/css/zenburn.css' rel='stylesheet'

    css:
      /*********************************************
       * OVERRIDES
       *********************************************/
      .reveal section p, .reveal section ol, .reveal section ul, .reveal section ol li, .reveal section ul li {
        text-align: left;
      }
      .reveal section p {
        margin-bottom: 20px;
      }
      .reveal section ol, .reveal section ul {
        display: block;
        margin-bottom: 20px;
      }
      .reveal section blockquote {
        margin-bottom: 20px;
        box-shadow: none;
      }
      .reveal section blockquote > p:last-child {
        margin-bottom: 0;
      }
      .reveal section img { text-align: center; }
      .reveal section img.full, .reveal section video.full {
        width: 100%;
        max-height: 100%;
      }
      .reveal pre code {
        word-wrap: inherit;
      }

    / If the query includes 'print-pdf', include the PDF print sheet
    javascript:
      if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = 'css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
      }
    == '<!--[if lt IE 9]><script src="/revealjs/lib/js/html5shiv.js"></script><![endif]-->'

  body
    .reveal
      / Any section element inside of this container is displayed as a slide
      .slides
        section data-markdown='' data-separator='^\n----\n$' data-vertical='^\n--\n$' data-notes='^Note:'
          script type='text/template'
            - if @skill.creator.can? :include_html_in, :markdown
              == yield
            - else
              = escape_once yield

    script src='/revealjs/lib/js/head.min.js'
    script src='/revealjs/js/reveal.js'
    script src='//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'

    javascript:
      // Full list of configuration options available here:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
        history: true,
        theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
        transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none
        // Parallax scrolling
        // parallaxBackgroundImage: 'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg',
        // parallaxBackgroundSize: '2100px 900px',
        // Optional libraries used to extend on reveal.js
        dependencies: [
          { src: '/revealjs/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          // Interpret Markdown in <section> elements
          { src: '/revealjs/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
          { src: '/revealjs/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); }, callback: function() {
            $('p:has(img,video,iframe)').contents().unwrap();
          } },
          { src: '/revealjs/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
          { src: '/revealjs/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
          { src: '/revealjs/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
        ]
      });